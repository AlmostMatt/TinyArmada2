//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;

public enum Resource {FOOD=0, WOOD=1, GOLD=2, STONE=3};

public class Player
{
	public Color color;
	public int number;
	public List<Unit> units = new List<Unit>(); // units add themselves
	public List<Building> buildings = new List<Building>(); // buildings add themselves

	public HashSet<Building> tradeWith = new HashSet<Building>();

	public bool isHuman = false;
	public bool isNeutral = false;
	public Dictionary<Resource, float> resources;

	public Player (int pnum)
	{
		number = pnum;
		switch (number) {
		case 0:
			color = Color.gray;
			isNeutral = true;
			break;
		case 1:
			color = Color.blue;
			isHuman = true;
			break;
		case 2:
			color = Color.green;
			break;
		case 3:
			color = Color.red;
			break;
		case 4:
			color = Color.black;
			break;
		}
		resources = new Dictionary<Resource, float>();
		foreach (Resource res in Enum.GetValues(typeof(Resource))) {
			resources[res] = 0f;
		}
	}
	
	public void collect(Resource res, float amount) {
		resources[res] += amount;
	}
	
	public bool has(Resource res, float amount) {
		return resources[res] >= amount;
	}
	
	public bool spend(Resource res, float amount) {
		if (has(res, amount)) {
			resources[res] -= amount;
			return true;
		} else {
			return false;
		}
	}
	
	public void toggleTrading(Building building) {
		if (tradeWith.Contains(building)) {
			tradeWith.Remove(building);
		} else {
			tradeWith.Add(building);
		}
		building.setOwner(this);
	}

	public HashSet<Building> tradeBuildings() {
		return tradeWith;
	}
}
